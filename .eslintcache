[{"E:\\Projects\\healing-water-agency\\src\\index.js":"1","E:\\Projects\\healing-water-agency\\src\\App.js":"2","E:\\Projects\\healing-water-agency\\src\\reportWebVitals.js":"3","E:\\Projects\\healing-water-agency\\src\\components\\Header.js":"4","E:\\Projects\\healing-water-agency\\src\\screens\\HomeScreen.js":"5","E:\\Projects\\healing-water-agency\\src\\components\\Footer.js":"6","E:\\Projects\\healing-water-agency\\src\\components\\StripeApi.js":"7","E:\\Projects\\healing-water-agency\\src\\components\\GalleryCarousel.js":"8","E:\\Projects\\healing-water-agency\\src\\components\\AvailabilityForm.js":"9","E:\\Projects\\healing-water-agency\\src\\components\\Item.js":"10","E:\\Projects\\healing-water-agency\\src\\hooks\\useRoomsList.js":"11","E:\\Projects\\healing-water-agency\\src\\hooks\\useRoomDetails.js":"12","E:\\Projects\\healing-water-agency\\src\\hooks\\useRoomStatus.js":"13","E:\\Projects\\healing-water-agency\\src\\api\\backendApi.js":"14","E:\\Projects\\healing-water-agency\\src\\hooks\\usePrograms.js":"15","E:\\Projects\\healing-water-agency\\src\\components\\CustomInput.js":"16","E:\\Projects\\healing-water-agency\\src\\components\\ServiceTransferList.js":"17","E:\\Projects\\healing-water-agency\\src\\components\\PriceIcon.js":"18","E:\\Projects\\healing-water-agency\\src\\hooks\\useServices.js":"19","E:\\Projects\\healing-water-agency\\src\\components\\CheckOut2.js":"20","E:\\Projects\\healing-water-agency\\src\\components\\CheckOut.js":"21","E:\\Projects\\healing-water-agency\\src\\hooks\\usePayment.js":"22"},{"size":609,"mtime":1610810632913,"results":"23","hashOfConfig":"24"},{"size":526,"mtime":1611667988744,"results":"25","hashOfConfig":"24"},{"size":362,"mtime":499162500000,"results":"26","hashOfConfig":"24"},{"size":1947,"mtime":1611044730634,"results":"27","hashOfConfig":"24"},{"size":7732,"mtime":1611052306486,"results":"28","hashOfConfig":"24"},{"size":3795,"mtime":1611373164948,"results":"29","hashOfConfig":"24"},{"size":4339,"mtime":1611681323420,"results":"30","hashOfConfig":"24"},{"size":3892,"mtime":1611370669683,"results":"31","hashOfConfig":"24"},{"size":14898,"mtime":1611638444172,"results":"32","hashOfConfig":"24"},{"size":273,"mtime":1610810632870,"results":"33","hashOfConfig":"24"},{"size":697,"mtime":1611318390064,"results":"34","hashOfConfig":"24"},{"size":531,"mtime":1611318390064,"results":"35","hashOfConfig":"24"},{"size":824,"mtime":1611235801557,"results":"36","hashOfConfig":"24"},{"size":172,"mtime":1611318390052,"results":"37","hashOfConfig":"24"},{"size":675,"mtime":1611318390064,"results":"38","hashOfConfig":"24"},{"size":398,"mtime":1611281063457,"results":"39","hashOfConfig":"24"},{"size":5808,"mtime":1611663036795,"results":"40","hashOfConfig":"24"},{"size":324,"mtime":1611494431955,"results":"41","hashOfConfig":"24"},{"size":600,"mtime":1611494431967,"results":"42","hashOfConfig":"24"},{"size":1924,"mtime":1611667113419,"results":"43","hashOfConfig":"24"},{"size":8509,"mtime":1611680566648,"results":"44","hashOfConfig":"24"},{"size":857,"mtime":1611674637037,"results":"45","hashOfConfig":"24"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},"19cgmtr",{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"48"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"48"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"48"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"48"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"48"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82","usedDeprecatedRules":"48"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87","usedDeprecatedRules":"48"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"92","usedDeprecatedRules":"48"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"95"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"98","messages":"99","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"E:\\Projects\\healing-water-agency\\src\\index.js",[],["100","101"],"E:\\Projects\\healing-water-agency\\src\\App.js",[],"E:\\Projects\\healing-water-agency\\src\\reportWebVitals.js",[],"E:\\Projects\\healing-water-agency\\src\\components\\Header.js",[],"E:\\Projects\\healing-water-agency\\src\\screens\\HomeScreen.js",[],"E:\\Projects\\healing-water-agency\\src\\components\\Footer.js",["102","103","104","105","106","107","108","109","110","111"],"import React from 'react';\r\nimport { Col, Container, Row } from 'reactstrap';\r\n\r\nfunction Footer(props) {\r\n\treturn (\r\n\t\t<div className='footer'>\r\n\t\t\t<Container fluid>\r\n\t\t\t\t<Row className=' footrow'>\r\n\t\t\t\t\t<Col\r\n\t\t\t\t\t\txs={{ size: 4, offset: 2 }}\r\n\t\t\t\t\t\tsm={{ size: 3, offset: 0 }}\r\n\t\t\t\t\t\tmd={{ size: 2, offset: 1 }}\r\n\t\t\t\t\t\tclassName=' col13a'\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t<img\r\n\t\t\t\t\t\t\tsrc='assets/images/logo.png'\r\n\t\t\t\t\t\t\theight='66'\r\n\t\t\t\t\t\t\twidth='160'\r\n\t\t\t\t\t\t\talt='Healing Waters'\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t<p className='text12'>\r\n\t\t\t\t\t\t\tLorem Ipsum is simply dummy text of Lorem Ipsum has been the\r\n\t\t\t\t\t\t\tindustry's unknown printer took.\r\n\t\t\t\t\t\t</p>\r\n\t\t\t\t\t</Col>\r\n\t\t\t\t\t<Col\r\n\t\t\t\t\t\txs={{ size: 4, offset: 3 }}\r\n\t\t\t\t\t\tsm={{ size: 2, offset: 1 }}\r\n\t\t\t\t\t\tmd='2'\r\n\t\t\t\t\t\tclassName=' col13b'\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t<h1 className='heading'>Useful Links</h1>\r\n\t\t\t\t\t\t<ul className='list-unstyled'>\r\n\t\t\t\t\t\t\t<li>\r\n\t\t\t\t\t\t\t\t<a href='#'>About Us</a>\r\n\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t\t<li>\r\n\t\t\t\t\t\t\t\t<a href='#'>Contact Us</a>\r\n\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t\t<li>\r\n\t\t\t\t\t\t\t\t<a href='#'>Services</a>\r\n\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t\t<li>\r\n\t\t\t\t\t\t\t\t<a href='#'>Photo Gallery</a>\r\n\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t\t<li>\r\n\t\t\t\t\t\t\t\t<a href='#'>Our Location</a>\r\n\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t</ul>\r\n\t\t\t\t\t</Col>\r\n\t\t\t\t\t<Col xs={{ size: 4, offset: 0 }} sm='2' md='2' className=' col13c'>\r\n\t\t\t\t\t\t<h1 className='heading'>Services</h1>\r\n\t\t\t\t\t\t<ul className='list-unstyled'>\r\n\t\t\t\t\t\t\t<li>\r\n\t\t\t\t\t\t\t\t<a href='#'>Weekend</a>\r\n\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t\t<li>\r\n\t\t\t\t\t\t\t\t<a href='#'>One Week</a>\r\n\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t\t<li>\r\n\t\t\t\t\t\t\t\t<a href='#'>Wellness & Spa</a>\r\n\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t\t<li>\r\n\t\t\t\t\t\t\t\t<a href='#'>Rooms</a>\r\n\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t\t<li>\r\n\t\t\t\t\t\t\t\t<a href='#'>Activities</a>\r\n\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t</ul>\r\n\t\t\t\t\t</Col>\r\n\t\t\t\t\t<Col\r\n\t\t\t\t\t\txs={{ size: 8, offset: 2 }}\r\n\t\t\t\t\t\tsm={{ size: 4, offset: 0 }}\r\n\t\t\t\t\t\tmd='4'\r\n\t\t\t\t\t\tclassName=' col13d'\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t<h1 className='heading1'>Instagram</h1>\r\n\t\t\t\t\t\t<Row className=' row13d1 '>\r\n\t\t\t\t\t\t\t<Col xs='3' sm={{ size: 2 }} className=' col13d1 '>\r\n\t\t\t\t\t\t\t\t<img\r\n\t\t\t\t\t\t\t\t\tclassName=' img img-fluid'\r\n\t\t\t\t\t\t\t\t\tsrc='assets/tropical-relax-in-mauritius-PUR3S67.png'\r\n\t\t\t\t\t\t\t\t\theight='75'\r\n\t\t\t\t\t\t\t\t\twidth='75'\r\n\t\t\t\t\t\t\t\t\talt='lotus'\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t\t\t<Col xs='3' sm={{ size: 2 }} className=' col13d1 '>\r\n\t\t\t\t\t\t\t\t<img\r\n\t\t\t\t\t\t\t\t\tclassName='  img img-fluid'\r\n\t\t\t\t\t\t\t\t\tsrc='assets/yoga-PHNNASZ.png'\r\n\t\t\t\t\t\t\t\t\theight='75'\r\n\t\t\t\t\t\t\t\t\twidth='75'\r\n\t\t\t\t\t\t\t\t\talt='lotus'\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t\t\t<Col xs='3' sm={{ size: 2 }} className=' col13d1 '>\r\n\t\t\t\t\t\t\t\t<img\r\n\t\t\t\t\t\t\t\t\tclassName=' img img-fluid'\r\n\t\t\t\t\t\t\t\t\tsrc='assets/woman-enjoys-spa-in-geothermal-hot-spring-PJEKW7B.png'\r\n\t\t\t\t\t\t\t\t\theight='75'\r\n\t\t\t\t\t\t\t\t\twidth='75'\r\n\t\t\t\t\t\t\t\t\talt='lotus'\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t\t</Row>\r\n\t\t\t\t\t\t<Row>\r\n\t\t\t\t\t\t\t<Col xs='3' sm={{ size: 2}} className=' col13d1'>\r\n\t\t\t\t\t\t\t\t<img\r\n\t\t\t\t\t\t\t\t\tclassName=' img img-fluid'\r\n\t\t\t\t\t\t\t\t\tsrc='assets/interior-of-wooden-sauna-bath-JTAWVG9.png'\r\n\t\t\t\t\t\t\t\t\theight='75'\r\n\t\t\t\t\t\t\t\t\twidth='75'\r\n\t\t\t\t\t\t\t\t\talt='lotus'\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t\t\t<Col xs='3' sm={{ size: 2 }} className=' col13d1'>\r\n\t\t\t\t\t\t\t\t<img\r\n\t\t\t\t\t\t\t\t\tclassName=' img img-fluid'\r\n\t\t\t\t\t\t\t\t\tsrc='assets/woman-enjoying-blue-lagoon-4YQXTEN.png'\r\n\t\t\t\t\t\t\t\t\theight='75'\r\n\t\t\t\t\t\t\t\t\twidth='75'\r\n\t\t\t\t\t\t\t\t\talt='lotus'\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t\t\t<Col xs='3' sm={{ size: 2 }} className=' col13d1'>\r\n\t\t\t\t\t\t\t\t<img\r\n\t\t\t\t\t\t\t\t\tclassName=' img img-fluid'\r\n\t\t\t\t\t\t\t\t\tsrc='assets/abstract-water-ripples-background-TCLT3RA.png'\r\n\t\t\t\t\t\t\t\t\theight='75'\r\n\t\t\t\t\t\t\t\t\twidth='75'\r\n\t\t\t\t\t\t\t\t\talt='lotus'\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t\t</Row>\r\n\t\t\t\t\t</Col>\r\n\t\t\t\t</Row>\r\n\t\t\t\t<Row className='top-row justify-content-center'>\r\n\t\t\t\t\t<Col xs='auto' className='top-text'>\r\n\t\t\t\t\t\tHealing Waters 2020 All Rights Reserved.\r\n\t\t\t\t\t</Col>\r\n\t\t\t\t</Row>\r\n\t\t\t</Container>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default Footer;\r\n","E:\\Projects\\healing-water-agency\\src\\components\\StripeApi.js",["112","113","114","115","116","117","118","119","120","121"],"E:\\Projects\\healing-water-agency\\src\\components\\GalleryCarousel.js",[],"E:\\Projects\\healing-water-agency\\src\\components\\AvailabilityForm.js",["122","123","124","125","126","127","128","129"],"import React, {useState} from 'react';\r\nimport useRoomsList from '../hooks/useRoomsList';\r\nimport useRoomDetails from '../hooks/useRoomDetails';\r\nimport useRoomStatus from '../hooks/useRoomStatus';\r\nimport usePrograms from '../hooks/usePrograms';\r\nimport {Card} from 'react-bootstrap';\r\nimport DatePicker from 'react-datepicker';\r\nimport 'react-datepicker/dist/react-datepicker.css';\r\nimport room_img from '../assets/room_img.png';\r\n\r\nimport {\r\n    Button,\r\n    CardText,\r\n    Col,\r\n    Form,\r\n    FormGroup,\r\n    Input,\r\n    Label,\r\n    Modal,\r\n    ModalBody,\r\n    ModalFooter,\r\n    ModalHeader,\r\n    Row,\r\n} from 'reactstrap';\r\nimport {Link} from 'react-router-dom';\r\nimport CustomInput from './CustomInput';\r\nimport useServices from '../hooks/useServices';\r\n\r\n//var DatePicker = require('reactstrap-date-picker');\r\n\r\nconst AvailabilityForm = (props) => {\r\n    const {className} = props;\r\n    const [modal1, setModal1] = useState(false);\r\n    const [modal2, setModal2] = useState(false);\r\n    const [modal3, setModal3] = useState(false);\r\n    const toggle1 = () => setModal1(!modal1);\r\n    const toggle2 = () => setModal2(!modal2);\r\n    const toggle3 = () => setModal3(!modal3);\r\n\r\n    const [pickedRoom, setPickedRoom] = useState('');\r\n    const [checkedIn, setCheckedIn] = useState(new Date());\r\n    const [checkedOut, setCheckedOut] = useState(new Date());\r\n    const [nights, setNights] = useState('');\r\n\r\n    const [rooms, searchApi, errorMessage1] = useRoomsList();\r\n    const [roomDatail, roomDetailApi, errorMessage2] = useRoomDetails();\r\n    const [roomStatus, roomStatusApi, errorMessage3] = useRoomStatus();\r\n    const [programs, programsApi, errorMessage4] = usePrograms();\r\n    const [services, servicesApi, errorMessage5] = useServices();\r\n    console.log(programs);\r\n\r\n    const Program = ({pname, ptype, pservices}) => {\r\n        console.log('Program ftn', {pname, ptype, pservices});\r\n        return (\r\n            <Col\r\n                xs={{size: 10, offset: 1}}\r\n                sm={{size: 6, offset: 0}}\r\n                lg={{size: 4, offset: 0}}\r\n                className='mb-4 mx-lg-5'\r\n            >\r\n                <Card style={{width: '14rem'}}>\r\n                    <Card.Img variant='top' src={room_img}/>\r\n                    <Card.Body className='pl-4'>\r\n                        <Card.Title>{`${ptype} PROGRAM`} </Card.Title>\r\n\r\n                        {pservices.map((service) => {\r\n                            return (\r\n                                <div key={service.id}>\r\n                                    <Card.Text className='my-0 mx-4'>\r\n                                        {`${service.name} for $${service.price}`}{' '}\r\n                                    </Card.Text>\r\n                                </div>\r\n                            );\r\n                        })}\r\n\r\n                        <Button\r\n                            className='buttonfont mt-4  ml-5'\r\n                            color='primary'\r\n                            onClick={() =>\r\n                                ptype === '7 DAYS'\r\n                                    ? (setCheckedOut(\r\n                                    new Date(checkedOut.setDate(checkedIn.getDate() + 7))\r\n                                    ),\r\n                                        setNights(7),\r\n                                        toggle3())\r\n                                    : (setCheckedOut(\r\n                                    new Date(checkedOut.setDate(checkedIn.getDate() + 2))\r\n                                    ),\r\n                                        setNights(2),\r\n                                        toggle3())\r\n                            }\r\n                        >\r\n                            Select\r\n                        </Button>\r\n                    </Card.Body>\r\n                </Card>\r\n            </Col>\r\n        );\r\n    };\r\n\r\n    const ServicesPrograms = (programs) => {\r\n        //console.log('ServicesPrograms=',programs)\r\n        return (\r\n            <Row>\r\n                {programs.map((program) => {\r\n                    return (\r\n                        <Program\r\n                            key={program.id}\r\n                            pname={program.name}\r\n                            ptype={program.type}\r\n                            pservices={program.services}\r\n                        />\r\n                    );\r\n                })}\r\n            </Row>\r\n        );\r\n    };\r\n\r\n    const Room = ({number, beds, capacity}) => {\r\n        const bed_or_beds = beds === 1 ? 'bed' : 'beds';\r\n        const person_or_people = capacity === 1 ? 'person' : 'people';\r\n        return (\r\n            <Col\r\n                xs={{size: 6, offset: 1}}\r\n                className='mb-4'\r\n                sm={{size: 6, offset: 0}}\r\n                lg={{size: 4, offset: 0}}\r\n            >\r\n                <Card style={{width: '14.5rem'}}>\r\n                    <Card.Img variant='top' src={room_img} width='100%'/>\r\n                    <Card.Header style={{fontWeight: 'bold'}}>\r\n                        <span>Room {number}</span>\r\n                        <CardText>\r\n                            <small className='text-muted'>\r\n                                {beds} <strong>{bed_or_beds}</strong> for {capacity}{' '}\r\n                                <strong>{person_or_people}</strong>\r\n                            </small>\r\n                        </CardText>\r\n                        <Button\r\n                            className='mr-lg-4 w-100'\r\n                            variant='primary'\r\n                            color='primary'\r\n                            onClick={() => {\r\n                                setPickedRoom(number);\r\n                                toggle1();\r\n                            }}\r\n                        >\r\n                            Pick Room\r\n                        </Button>\r\n                    </Card.Header>\r\n                </Card>\r\n            </Col>\r\n        );\r\n    };\r\n\r\n    const RoomsList = (rooms) => {\r\n        return (\r\n            <Row>\r\n                {rooms.map((room) => {\r\n                    return (\r\n                        <Room\r\n                            key={room.id}\r\n                            number={room.number}\r\n                            capacity={room.capacity}\r\n                            beds={room.beds}\r\n                        />\r\n                    );\r\n                })}\r\n            </Row>\r\n        );\r\n    };\r\n\r\n    const SubmitHandler = (evt) => {\r\n        evt.preventDefault();\r\n        roomStatusApi({\r\n            pickedRoom: pickedRoom,\r\n            checkedIn: checkedIn,\r\n            checkedOut: checkedOut,\r\n            nights: nights,\r\n        });\r\n        toggle2();\r\n    };\r\n    return (\r\n        <Row className=' align-items-end'>\r\n            <Col xs={{size: 3}}/>\r\n            <Col className=' col2 ' xs={{size: 9}}>\r\n                <h1 className='availability ml-lg-5 pl-lg-5'>Check Availability :</h1>\r\n                <Form onSubmit={SubmitHandler} inline>\r\n                    <Row>\r\n                        <Col xs='8' sm='3' md='4' lg={{size: 3, offset: 1}} xl='2'>\r\n                            <FormGroup>\r\n                                <Label for='pickRoom'>Pick room</Label>\r\n\r\n                                <Input\r\n                                    type='text'\r\n                                    name='text'\r\n                                    id='pickRoom'\r\n                                    placeholder='&#xf21d;   Pick a room'\r\n                                    size={13}\r\n                                    value={pickedRoom}\r\n                                    onChange={(e) => setPickedRoom(e.target.value)}\r\n                                    onClick={() => {\r\n                                        searchApi();\r\n                                        toggle1();\r\n                                    }}\r\n                                />\r\n                            </FormGroup>\r\n                        </Col>\r\n                        <Col\r\n                            xs='6'\r\n                            sm={{size: 5, offset: 3}}\r\n                            md={{size: 4, offset: 2}}\r\n                            lg={{size: 3, offset: 3}}\r\n                            xl={{size: 2, offset: 0}}\r\n                        >\r\n                            <FormGroup>\r\n                                <Label for='checkedIn'>Check In</Label>\r\n                                <DatePicker\r\n                                    id='checkedIn'\r\n                                    selected={checkedIn}\r\n                                    onChange={(date) => {\r\n                                        setCheckedIn(date);\r\n                                    }}\r\n                                    minDate={new Date()}\r\n                                    customInput={<CustomInput/>}\r\n                                />\r\n                            </FormGroup>\r\n                        </Col>\r\n                        <Col\r\n                            xs='7'\r\n                            sm='5'\r\n                            md='4'\r\n                            lg={{size: 3, offset: 1}}\r\n                            xl={{size: 2, offset: 0}}\r\n                        >\r\n                            <FormGroup>\r\n                                <Label for='checkedOut'>Check Out</Label>\r\n                                <DatePicker\r\n                                    id='checkedOut'\r\n                                    selected={checkedOut}\r\n                                    onChange={(date) => {\r\n                                        setCheckedOut(date);\r\n                                    }}\r\n                                    minDate={new Date()}\r\n                                    customInput={<CustomInput/>}\r\n                                />\r\n                            </FormGroup>\r\n                        </Col>\r\n                        <Col\r\n                            xs='8'\r\n                            sm={{size: 3, offset: 1}}\r\n                            md={{size: 3, offset: 2}}\r\n                            lg={{size: 3, offset: 3}}\r\n                            xl={{size: 2, offset: 0}}\r\n                        >\r\n                            <FormGroup>\r\n                                <Label for='nights'>Nights:</Label>\r\n                                <Input\r\n                                    type='text'\r\n                                    name='text'\r\n                                    id='nights'\r\n                                    size={13}\r\n                                    value={nights}\r\n                                    onChange={(e) => setNights(e.target.value)}\r\n                                    placeholder='&#xf186; 7 Nights'\r\n                                    onClick={() => {\r\n                                        programsApi();\r\n                                        toggle3();\r\n                                    }}\r\n                                />\r\n                            </FormGroup>\r\n                        </Col>\r\n                        <Col\r\n                            xs={{size: 6, offset: 3}}\r\n                            sm={{size: 6, offset: 4}}\r\n                            md={{size: 4, offset: 4}}\r\n                            lg={{size: 6, offset: 4}}\r\n                            xl={{size: 2, offset: 0}}\r\n                            className='mt-xl-4'\r\n                        >\r\n                            <Button\r\n                                type='submit'\r\n                                value='CHECK NOW'\r\n                                className='check-button buttonfont '\r\n                            >\r\n                                CHECK NOW\r\n                            </Button>\r\n                        </Col>\r\n                    </Row>\r\n                </Form>\r\n            </Col>\r\n            <Modal size='lg' isOpen={modal1} toggle={toggle1} className={className}>\r\n                <ModalHeader toggle={toggle1}>All Rooms</ModalHeader>\r\n                <ModalBody>{RoomsList(rooms)}</ModalBody>\r\n                <ModalFooter>\r\n                    <Button\r\n                        color='danger'\r\n                        onClick={() => {\r\n                            toggle1();\r\n                        }}\r\n                    >\r\n                        Cancel\r\n                    </Button>\r\n                </ModalFooter>\r\n            </Modal>\r\n            <Modal size='lg' isOpen={modal2} toggle={toggle2} className={className}>\r\n                <ModalHeader toggle={toggle2}>Room Status</ModalHeader>\r\n                {roomStatus === 'available' ? (\r\n                    <ModalBody>\r\n                        Room is available.Do you want to reserve it?{'     '}\r\n                        <Link\r\n                            to={{\r\n                                pathname: `/StripeApi/${pickedRoom}/${nights}`,\r\n                                state: {\r\n                                    programs: programs,\r\n                                    services: services,\r\n                                },\r\n                            }}\r\n                        >\r\n                            <Button\r\n                                className='buttonfont'\r\n                                color='primary'\r\n                                onClick={() => {\r\n                                    toggle2();\r\n                                }}\r\n                            >\r\n                                Click Here!\r\n                            </Button>\r\n                        </Link>\r\n                    </ModalBody>\r\n                ) : (\r\n                    <ModalBody>\r\n                        'Sorry!this room will not be avaiable for your specified time,\r\n                        please pick another room'{' '}\r\n                    </ModalBody>\r\n                )}\r\n                <ModalFooter>\r\n                    <Button\r\n                        color='danger'\r\n                        onClick={() => {\r\n                            toggle2();\r\n                        }}\r\n                    >\r\n                        Cancel\r\n                    </Button>\r\n                </ModalFooter>\r\n            </Modal>\r\n            <Modal size='lg' isOpen={modal3} toggle={toggle3} className={className}>\r\n                <ModalHeader toggle={toggle3}>Our two services programs</ModalHeader>\r\n                <ModalBody>{ServicesPrograms(programs)}</ModalBody>\r\n                <ModalFooter>\r\n                    <Button\r\n                        color='danger'\r\n                        onClick={() => {\r\n                            toggle3();\r\n                        }}\r\n                    >\r\n                        Cancel\r\n                    </Button>\r\n                </ModalFooter>\r\n            </Modal>\r\n        </Row>\r\n    );\r\n};\r\nexport default AvailabilityForm;\r\n","E:\\Projects\\healing-water-agency\\src\\components\\Item.js",[],"E:\\Projects\\healing-water-agency\\src\\hooks\\useRoomsList.js",["130"],"import {useEffect, useState} from 'react';\r\nimport backendApi from '../api/backendApi';\r\n\r\nexport default () => {\r\n    const [rooms, setRooms] = useState([]);\r\n    const [errorMessage, setErrorMessage] = useState('');\r\n    const searchApi = async () => {\r\n        try {\r\n            const response = await backendApi.get('/rooms');\r\n            setRooms(response.data);\r\n        } catch (err) {\r\n            setErrorMessage(err);\r\n            //\tconsole.log('error', err);\r\n        }\r\n    };\r\n\r\n    //we want to run the arrow ftn only when the component is rendered for the first time.\r\n    useEffect(() => {\r\n        searchApi();\r\n    }, []);\r\n\r\n    return [rooms, searchApi, errorMessage];\r\n};\r\n","E:\\Projects\\healing-water-agency\\src\\hooks\\useRoomDetails.js",["131"],"import {useState} from 'react';\r\nimport backendApi from '../api/backendApi';\r\n\r\nexport default () => {\r\n    const [roomDetail, setRoomDetail] = useState(null);\r\n    const [errorMessage, setErrorMessage] = useState('');\r\n    const roomDetailApi = async (room) => {\r\n        try {\r\n            const response = await backendApi.get(`/rooms/${room}`);\r\n            setRoomDetail(response.data);\r\n        } catch (err) {\r\n            setErrorMessage(err);\r\n        }\r\n    };\r\n    return [roomDetail, roomDetailApi, errorMessage];\r\n};\r\n","E:\\Projects\\healing-water-agency\\src\\hooks\\useRoomStatus.js",["132","133"],"import { useState } from 'react';\r\nimport backendApi from '../api/backendApi';\r\nexport default () => {\r\n\tconst [roomStatus, setRoomStatus] = useState('');\r\n\tconst [errorMessage, setErrorMessage] = useState('');\r\n\tconst show = true;\r\n\tconst roomStatusApi = async ({\r\n\t\tpickedRoom,\r\n\t\tcheckedIn,\r\n\t\tcheckedOut,\r\n\t\tnights,\r\n\t\t\r\n\t}) => {\r\n\t\tconsole.log('this roomstatus');\r\n\t\ttry {\r\n\t\t\tconst response = await backendApi.post(`/rooms/${pickedRoom}/status`, {\r\n\t\t\t\t// pickedRoom,\r\n\t\t\t\tcheck_in: checkedIn,\r\n\t\t\t\tcheck_out: checkedOut,\r\n\t\t\t\t// nights,\r\n\r\n\t\t\t});\r\n\t\t\tconsole.log('This is roomstatusapi');\r\n\t\t\tsetRoomStatus(response.data.status);\r\n\t\t\t\r\n\r\n\t\t\tconsole.log(response);\r\n\t\t} catch (err) {\r\n\t\t\tsetErrorMessage(err);\r\n\t\t\tconsole.log('myError', err);\r\n\t\t}\r\n\t};\r\n\r\n\treturn [roomStatus, roomStatusApi, errorMessage];\r\n};\r\n","E:\\Projects\\healing-water-agency\\src\\api\\backendApi.js",[],"E:\\Projects\\healing-water-agency\\src\\hooks\\usePrograms.js",["134"],"import {useEffect, useState} from 'react';\r\nimport backendApi from '../api/backendApi';\r\n\r\nexport default () => {\r\n    const [programs, setPrograms] = useState([]);\r\n    const [errorMessage, setErrorMessage] = useState('');\r\n    const programsApi = async () => {\r\n        try {\r\n            const response = await backendApi.get('/programs');\r\n            setPrograms(response.data);\r\n        } catch (err) {\r\n            setErrorMessage(err);\r\n        }\r\n    };\r\n\r\n    //we want to run the arrow ftn only when the component is rendered for the first time.\r\n    useEffect(() => {\r\n        programsApi();\r\n    }, []);\r\n\r\n    return [programs, programsApi, errorMessage];\r\n};\r\n","E:\\Projects\\healing-water-agency\\src\\components\\CustomInput.js",[],"E:\\Projects\\healing-water-agency\\src\\components\\ServiceTransferList.js",["135","136"],"import React, { useState }from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport List from '@material-ui/core/List';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardHeader from '@material-ui/core/CardHeader';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport Button from '@material-ui/core/Button';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport { Tooltip, Zoom } from '@material-ui/core';\r\nimport PriceIcon from './PriceIcon';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n\troot: {\r\n\t\tmargin: 'auto',\r\n\t},\r\n\tcardHeader: {\r\n\t\tpadding: theme.spacing(1, 2),\r\n\t},\r\n\tlist: {\r\n\t\twidth: 200,\r\n\t\tbackgroundColor: theme.palette.background.paper,\r\n\t\toverflow: 'auto',\r\n\t},\r\n\titem: {\r\n\t\tpadding: theme.spacing(0, 2),\r\n\t},\r\n\tbutton: {\r\n\t\tmargin: theme.spacing(0.5, 0),\r\n\t},\r\n}));\r\n\r\nfunction not(a, b) {\r\n\treturn a.filter((value) => b.indexOf(value) === -1);\r\n}\r\n\r\nfunction intersection(a, b) {\r\n\treturn a.filter((value) => b.indexOf(value) !== -1);\r\n}\r\n\r\nfunction union(a, b) {\r\n\treturn [...a, ...not(b, a)];\r\n}\r\n\r\nconst ServiceTransferList = ({\r\n\tallServices,\r\n\tprogramDefaultServices,\r\n\ttotalPrice,\r\n\tselectedServices,\r\n}) => {\r\n\tconst classes = useStyles();\r\n\tconst [checked, setChecked] = React.useState([]);\r\n\tconst [left, setLeft] = React.useState(allServices);\r\n\tconst [right, setRight] = React.useState(programDefaultServices);\r\n    selectedServices(right);\r\n\tconst leftChecked = intersection(checked, left);\r\n\tconst rightChecked = intersection(checked, right);\r\n\r\n\tconst handleTotalPrice = (right) => {\r\n\t\t{\r\n\t\t\tconst price = right.reduce(\r\n\t\t\t\t(result, current) => result + current.price,\r\n\t\t\t\t0\r\n\t\t\t);\r\n\t\t\ttotalPrice(price);\r\n\t\t\treturn price;\r\n\t\t}\r\n\t};\r\n\r\n\tconst handleToggle = (value) => () => {\r\n\t\tconst currentIndex = checked.indexOf(value);\r\n\t\tconst newChecked = [...checked];\r\n\r\n\t\tif (currentIndex === -1) {\r\n\t\t\tnewChecked.push(value);\r\n\t\t} else {\r\n\t\t\tnewChecked.splice(currentIndex, 1);\r\n\t\t}\r\n\t\tsetChecked(newChecked);\r\n\t};\r\n\tconst numberOfChecked = (items) => intersection(checked, items).length;\r\n\r\n\tconst handleToggleAll = (items) => () => {\r\n\t\tif (numberOfChecked(items) === items.length) {\r\n\t\t\tsetChecked(not(checked, items));\r\n\t\t} else {\r\n\t\t\tsetChecked(union(checked, items));\r\n\t\t}\r\n\t};\r\n\r\n\tconst handleCheckedRight = () => {\r\n\t\tsetRight(right.concat(leftChecked));\r\n\t\tsetLeft(not(left, leftChecked));\r\n\t\tsetChecked(not(checked, leftChecked));\r\n\t};\r\n\r\n\tconst handleCheckedLeft = () => {\r\n\t\tsetLeft(left.concat(rightChecked));\r\n\t\tsetRight(not(right, rightChecked));\r\n\t\tsetChecked(not(checked, rightChecked));\r\n\t};\r\n\r\n\tconst customList = (title, services) => (\r\n\t\t<Card>\r\n\t\t\t<CardHeader\r\n\t\t\t\tclassName={classes.cardHeader}\r\n\t\t\t\tavatar={\r\n\t\t\t\t\t<Checkbox\r\n\t\t\t\t\t\tonClick={handleToggleAll(services)}\r\n\t\t\t\t\t\tchecked={\r\n\t\t\t\t\t\t\tnumberOfChecked(services) === services.length &&\r\n\t\t\t\t\t\t\tservices.length !== 0\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tindeterminate={\r\n\t\t\t\t\t\t\tnumberOfChecked(services) !== services.length &&\r\n\t\t\t\t\t\t\tnumberOfChecked(services) !== 0\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tdisabled={services.length === 0}\r\n\t\t\t\t\t\tinputProps={{ 'aria-label': 'all items selected' }}\r\n\t\t\t\t\t/>\r\n\t\t\t\t}\r\n\t\t\t\ttitle={title}\r\n\t\t\t\tsubheader={`${numberOfChecked(services)}/${services.length} selected`}\r\n\t\t\t/>\r\n\t\t\t<Divider />\r\n\t\t\t<List className={classes.list} dense component='div' role='list'>\r\n\t\t\t\t{services.map((service) => {\r\n\t\t\t\t\tconst labelId = `transfer-list-all-item-${service}-label`;\r\n\r\n\t\t\t\t\treturn (\r\n\t\t\t\t\t\t<Tooltip\r\n\t\t\t\t\t\t\tarrow\r\n\t\t\t\t\t\t\tTransitionComponent={Zoom}\r\n\t\t\t\t\t\t\ttitle={<PriceIcon price={service.price} />}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t<ListItem\r\n\t\t\t\t\t\t\t\tkey={service.id}\r\n\t\t\t\t\t\t\t\trole='listitem'\r\n\t\t\t\t\t\t\t\tbutton\r\n\t\t\t\t\t\t\t\tonClick={handleToggle(service)}\r\n\t\t\t\t\t\t\t\tclassName={classes.item}\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t<ListItemIcon>\r\n\t\t\t\t\t\t\t\t\t<Checkbox\r\n\t\t\t\t\t\t\t\t\t\tchecked={checked.indexOf(service) !== -1}\r\n\t\t\t\t\t\t\t\t\t\ttabIndex={-1}\r\n\t\t\t\t\t\t\t\t\t\tdisableRipple\r\n\t\t\t\t\t\t\t\t\t\tinputProps={{ 'aria-labelledby': labelId }}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t</ListItemIcon>\r\n\t\t\t\t\t\t\t\t<ListItemText id={labelId} primary={service.name} />\r\n\t\t\t\t\t\t\t</ListItem>\r\n\t\t\t\t\t\t</Tooltip>\r\n\t\t\t\t\t);\r\n\t\t\t\t})}\r\n\t\t\t\t<ListItem />\r\n\t\t\t</List>\r\n\t\t</Card>\r\n\t);\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<Grid\r\n\t\t\t\tcontainer\r\n\t\t\t\tspacing={2}\r\n\t\t\t\tjustify='center'\r\n\t\t\t\talignItems='center'\r\n\t\t\t\tclassName={classes.root}\r\n\t\t\t>\r\n\t\t\t\t<Grid item>{customList('Available Services', left)}</Grid>\r\n\t\t\t\t<Grid item>\r\n\t\t\t\t\t<Grid container direction='column' alignItems='center'>\r\n\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\tvariant='outlined'\r\n\t\t\t\t\t\t\tsize='small'\r\n\t\t\t\t\t\t\tclassName={classes.button}\r\n\t\t\t\t\t\t\tonClick={handleCheckedRight}\r\n\t\t\t\t\t\t\tdisabled={leftChecked.length === 0}\r\n\t\t\t\t\t\t\taria-label='move selected right'\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t&gt;\r\n\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\tvariant='outlined'\r\n\t\t\t\t\t\t\tsize='small'\r\n\t\t\t\t\t\t\tclassName={classes.button}\r\n\t\t\t\t\t\t\tonClick={handleCheckedLeft}\r\n\t\t\t\t\t\t\tdisabled={rightChecked.length === 0}\r\n\t\t\t\t\t\t\taria-label='move selected left'\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t&lt;\r\n\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t</Grid>\r\n\t\t\t\t</Grid>\r\n\t\t\t\t<Grid item>{customList('Program Default Services', right)}</Grid>\r\n\t\t\t</Grid>\r\n\t\t\t<div className='Checkout'>\r\n\t\t\t\t<div className='total_price'>\r\n\t\t\t\t\tTotal Price: &nbsp;\r\n\t\t\t\t\t<Button\r\n\t\t\t\t\t\tvariant={'outlined'}\r\n\t\t\t\t\t\tcolor={'secondary'}\r\n\t\t\t\t\t\tonClick={() => totalPrice(handleTotalPrice(right))}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t&#36;&nbsp;\r\n\t\t\t\t\t\t{handleTotalPrice(right)}\r\n\t\t\t\t\t</Button>\r\n\t\t\t\t</div>\r\n\t\t\t\t{/*<div className=\"checkout_button\">*/}\r\n\t\t\t\t{/*    <Button variant={'contained'} color={'primary'}>*/}\r\n\t\t\t\t{/*        Checkout*/}\r\n\t\t\t\t{/*    </Button>*/}\r\n\t\t\t\t{/*</div>*/}\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n};\r\nexport default ServiceTransferList;\r\n","E:\\Projects\\healing-water-agency\\src\\components\\PriceIcon.js",[],"E:\\Projects\\healing-water-agency\\src\\hooks\\useServices.js",["137"],"import { useState, useEffect } from 'react';\r\nimport backendApi from '../api/backendApi';\r\nexport default () => {\r\n\tconst [services, setServices] = useState([]);\r\n\tconst [errorMessage, setErrorMessage] = useState('');\r\n\tconst servicesApi = async () => {\r\n\t\ttry {\r\n\t\t\tconst response = await backendApi.get('/services');\r\n\t\t\tsetServices(response.data);\r\n\t\t} catch (err) {\r\n\t\t\tsetErrorMessage(err);\r\n\t\t}\r\n\t};\r\n\r\n\t//we want to run the arrow ftn only when the component is rendered for the first time.\r\n\tuseEffect(() => {\r\n\t\tservicesApi();\r\n\t}, []);\r\n\r\n\treturn [services, servicesApi, errorMessage];\r\n};\r\n","E:\\Projects\\healing-water-agency\\src\\components\\CheckOut2.js",[],["138","139"],"E:\\Projects\\healing-water-agency\\src\\components\\CheckOut.js",["140"],"E:\\Projects\\healing-water-agency\\src\\hooks\\usePayment.js",["141","142"],{"ruleId":"143","replacedBy":"144"},{"ruleId":"145","replacedBy":"146"},{"ruleId":"147","severity":1,"message":"148","line":35,"column":9,"nodeType":"149","endLine":35,"endColumn":21},{"ruleId":"147","severity":1,"message":"148","line":38,"column":9,"nodeType":"149","endLine":38,"endColumn":21},{"ruleId":"147","severity":1,"message":"148","line":41,"column":9,"nodeType":"149","endLine":41,"endColumn":21},{"ruleId":"147","severity":1,"message":"148","line":44,"column":9,"nodeType":"149","endLine":44,"endColumn":21},{"ruleId":"147","severity":1,"message":"148","line":47,"column":9,"nodeType":"149","endLine":47,"endColumn":21},{"ruleId":"147","severity":1,"message":"148","line":55,"column":9,"nodeType":"149","endLine":55,"endColumn":21},{"ruleId":"147","severity":1,"message":"148","line":58,"column":9,"nodeType":"149","endLine":58,"endColumn":21},{"ruleId":"147","severity":1,"message":"148","line":61,"column":9,"nodeType":"149","endLine":61,"endColumn":21},{"ruleId":"147","severity":1,"message":"148","line":64,"column":9,"nodeType":"149","endLine":64,"endColumn":21},{"ruleId":"147","severity":1,"message":"148","line":67,"column":9,"nodeType":"149","endLine":67,"endColumn":21},{"ruleId":"150","severity":1,"message":"151","line":5,"column":2,"nodeType":"152","messageId":"153","endLine":5,"endColumn":10},{"ruleId":"150","severity":1,"message":"154","line":7,"column":2,"nodeType":"152","messageId":"153","endLine":7,"endColumn":6},{"ruleId":"150","severity":1,"message":"155","line":8,"column":2,"nodeType":"152","messageId":"153","endLine":8,"endColumn":11},{"ruleId":"150","severity":1,"message":"156","line":9,"column":2,"nodeType":"152","messageId":"153","endLine":9,"endColumn":7},{"ruleId":"150","severity":1,"message":"157","line":10,"column":2,"nodeType":"152","messageId":"153","endLine":10,"endColumn":7},{"ruleId":"150","severity":1,"message":"158","line":15,"column":2,"nodeType":"152","messageId":"153","endLine":15,"endColumn":5},{"ruleId":"150","severity":1,"message":"159","line":24,"column":10,"nodeType":"152","messageId":"153","endLine":24,"endColumn":14},{"ruleId":"150","severity":1,"message":"160","line":34,"column":11,"nodeType":"152","messageId":"153","endLine":34,"endColumn":29},{"ruleId":"150","severity":1,"message":"161","line":36,"column":12,"nodeType":"152","messageId":"153","endLine":36,"endColumn":20},{"ruleId":"150","severity":1,"message":"162","line":37,"column":12,"nodeType":"152","messageId":"153","endLine":37,"endColumn":28},{"ruleId":"150","severity":1,"message":"163","line":45,"column":30,"nodeType":"152","messageId":"153","endLine":45,"endColumn":43},{"ruleId":"150","severity":1,"message":"164","line":46,"column":12,"nodeType":"152","messageId":"153","endLine":46,"endColumn":22},{"ruleId":"150","severity":1,"message":"165","line":46,"column":24,"nodeType":"152","messageId":"153","endLine":46,"endColumn":37},{"ruleId":"150","severity":1,"message":"166","line":46,"column":39,"nodeType":"152","messageId":"153","endLine":46,"endColumn":52},{"ruleId":"150","severity":1,"message":"167","line":47,"column":39,"nodeType":"152","messageId":"153","endLine":47,"endColumn":52},{"ruleId":"150","severity":1,"message":"168","line":48,"column":35,"nodeType":"152","messageId":"153","endLine":48,"endColumn":48},{"ruleId":"150","severity":1,"message":"169","line":49,"column":22,"nodeType":"152","messageId":"153","endLine":49,"endColumn":33},{"ruleId":"150","severity":1,"message":"170","line":49,"column":35,"nodeType":"152","messageId":"153","endLine":49,"endColumn":48},{"ruleId":"171","severity":1,"message":"172","line":4,"column":1,"nodeType":"173","endLine":23,"endColumn":3},{"ruleId":"171","severity":1,"message":"172","line":4,"column":1,"nodeType":"173","endLine":16,"endColumn":3},{"ruleId":"171","severity":1,"message":"172","line":3,"column":1,"nodeType":"173","endLine":35,"endColumn":3},{"ruleId":"150","severity":1,"message":"174","line":6,"column":8,"nodeType":"152","messageId":"153","endLine":6,"endColumn":12},{"ruleId":"171","severity":1,"message":"172","line":4,"column":1,"nodeType":"173","endLine":22,"endColumn":3},{"ruleId":"150","severity":1,"message":"175","line":1,"column":17,"nodeType":"152","messageId":"153","endLine":1,"endColumn":25},{"ruleId":"176","severity":1,"message":"177","line":63,"column":3,"nodeType":"178","messageId":"179","endLine":70,"endColumn":4},{"ruleId":"171","severity":1,"message":"172","line":3,"column":1,"nodeType":"173","endLine":21,"endColumn":3},{"ruleId":"143","replacedBy":"180"},{"ruleId":"145","replacedBy":"181"},{"ruleId":"150","severity":1,"message":"182","line":9,"column":8,"nodeType":"152","messageId":"153","endLine":9,"endColumn":18},{"ruleId":"171","severity":1,"message":"172","line":3,"column":1,"nodeType":"173","endLine":36,"endColumn":3},{"ruleId":"150","severity":1,"message":"183","line":4,"column":24,"nodeType":"152","messageId":"153","endLine":4,"endColumn":40},"no-native-reassign",["184"],"no-negated-in-lhs",["185"],"jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","no-unused-vars","'CardText' is defined but never used.","Identifier","unusedVar","'Form' is defined but never used.","'FormGroup' is defined but never used.","'Input' is defined but never used.","'Label' is defined but never used.","'Row' is defined but never used.","'Link' is defined but never used.","'selectedRoomNumber' is assigned a value but never used.","'totPrice' is assigned a value but never used.","'selectedServices' is assigned a value but never used.","'errorMessage1' is assigned a value but never used.","'roomDatail' is assigned a value but never used.","'roomDetailApi' is assigned a value but never used.","'errorMessage2' is assigned a value but never used.","'errorMessage3' is assigned a value but never used.","'errorMessage4' is assigned a value but never used.","'servicesApi' is assigned a value but never used.","'errorMessage5' is assigned a value but never used.","import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","'show' is assigned a value but never used.","'useState' is defined but never used.","no-lone-blocks","Nested block is redundant.","BlockStatement","redundantNestedBlock",["184"],["185"],"'usePayment' is defined but never used.","'setPaymentStatus' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]